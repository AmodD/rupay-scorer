package com.fortiate.aimodel;

/*
Licensed under the Apache License, Version 2.0
  http://www.apache.org/licenses/LICENSE-2.0.html

AUTOGENERATED BY H2O at 2019-06-29T10:24:53.829+05:30
3.24.0.5

Standalone prediction code with sample test data for GBMModel named FortiateGBMPojo

How to download, compile and execute:
    mkdir tmpdir
    cd tmpdir
    curl http:/localhost/127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
    curl http:/localhost/127.0.0.1:54321/3/Models.java/FortiateGBMPojo > FortiateGBMPojo.java
    javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m FortiateGBMPojo.java

   (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="FortiateGBMPojo", algorithm="gbm")
public class FortiateGBMPojo extends GenModel {
public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

public boolean isSupervised() { return true; }
public int nfeatures() { return 20; }
public int nclasses() { return 2; }

// Names of columns used by model.
public static final String[] NAMES = NamesHolder_FortiateGBMPojo.VALUES;
// Number of output classes included in training data response column.
public static final int NCLASSES = 2;

// Column domains. The last array contains domain of response column.
public static final String[][] DOMAINS = new String[][] {
  /* DE2 */ null,
  /* DE3 */ null,
  /* DE4 */ null,
  /* DE5 */ null,
  /* DE6 */ null,
  /* DE7 */ null,
  /* DE18 */ null,
  /* DE19 */ null,
  /* DE25 */ null,
  /* DE41 */ null,
  /* DE42 */ FortiateGBMPojo_ColInfo_10.VALUES,
  /* DE48 */ null,
  /* DE49 */ null,
  /* DE61 */ FortiateGBMPojo_ColInfo_13.VALUES,
  /* DE300 */ null,
  /* DE1004 */ null,
  /* DE2004 */ null,
  /* DE3004 */ null,
  /* DE4004 */ null,
  /* DE5004 */ null,
  /* Label */ FortiateGBMPojo_ColInfo_20.VALUES
};
// Prior class distribution
public static final double[] PRIOR_CLASS_DISTRIB = {0.022222222222222223,0.9777777777777777};
// Class distribution used for model building
public static final double[] MODEL_CLASS_DISTRIB = {0.022222222222222223,0.9777777777777777};

public FortiateGBMPojo() { super(NAMES,DOMAINS,"Label"); }
public String getUUID() { return Long.toString(-449232291942145605L); }

// Pass in data in a double[], pre-aligned to the Model's requirements.
// Jam predictions into the preds[] array; preds[0] is reserved for the
// main prediction (class for classifiers or value for regression),
// and remaining columns hold a probability distribution for classifiers.
public final double[] score0( double[] data, double[] preds ) {
  java.util.Arrays.fill(preds,0);
  FortiateGBMPojo_Forest_0.score0(data,preds);
  FortiateGBMPojo_Forest_1.score0(data,preds);
  FortiateGBMPojo_Forest_2.score0(data,preds);
  FortiateGBMPojo_Forest_3.score0(data,preds);
  FortiateGBMPojo_Forest_4.score0(data,preds);
  FortiateGBMPojo_Forest_5.score0(data,preds);
  FortiateGBMPojo_Forest_6.score0(data,preds);
  FortiateGBMPojo_Forest_7.score0(data,preds);
  FortiateGBMPojo_Forest_8.score0(data,preds);
  FortiateGBMPojo_Forest_9.score0(data,preds);
  preds[2] = preds[1] + 3.7841896339182597;
  preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
  preds[1] = 1.0-preds[2];
  preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.7582668167086668);
  return preds;
}
}
//The class representing training column names
class NamesHolder_FortiateGBMPojo implements java.io.Serializable {
public static final String[] VALUES = new String[20];
static {
  NamesHolder_FortiateGBMPojo_0.fill(VALUES);
}
static final class NamesHolder_FortiateGBMPojo_0 implements java.io.Serializable {
  static final void fill(String[] sa) {
    sa[0] = "DE2";
    sa[1] = "DE3";
    sa[2] = "DE4";
    sa[3] = "DE5";
    sa[4] = "DE6";
    sa[5] = "DE7";
    sa[6] = "DE18";
    sa[7] = "DE19";
    sa[8] = "DE25";
    sa[9] = "DE41";
    sa[10] = "DE42";
    sa[11] = "DE48";
    sa[12] = "DE49";
    sa[13] = "DE61";
    sa[14] = "DE300";
    sa[15] = "DE1004";
    sa[16] = "DE2004";
    sa[17] = "DE3004";
    sa[18] = "DE4004";
    sa[19] = "DE5004";
  }
}
}
//The class representing column DE42
class FortiateGBMPojo_ColInfo_10 implements java.io.Serializable {
public static final String[] VALUES = new String[3];
static {
  FortiateGBMPojo_ColInfo_10_0.fill(VALUES);
}
static final class FortiateGBMPojo_ColInfo_10_0 implements java.io.Serializable {
  static final void fill(String[] sa) {
    sa[0] = "CLEARTRIP689430";
    sa[1] = "GROFERS11797900";
    sa[2] = "PAYUPAISA477790";
  }
}
}
//The class representing column DE61
class FortiateGBMPojo_ColInfo_13 implements java.io.Serializable {
public static final String[] VALUES = new String[3];
static {
  FortiateGBMPojo_ColInfo_13_0.fill(VALUES);
}
static final class FortiateGBMPojo_ColInfo_13_0 implements java.io.Serializable {
  static final void fill(String[] sa) {
    sa[0] = "mastercard";
    sa[1] = "rupay";
    sa[2] = "visa";
  }
}
}
//The class representing column Label
class FortiateGBMPojo_ColInfo_20 implements java.io.Serializable {
public static final String[] VALUES = new String[2];
static {
  FortiateGBMPojo_ColInfo_20_0.fill(VALUES);
}
static final class FortiateGBMPojo_ColInfo_20_0 implements java.io.Serializable {
  static final void fill(String[] sa) {
    sa[0] = "BAD";
    sa[1] = "GOOD";
  }
}
}

class FortiateGBMPojo_Forest_0 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_0_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_0_class_0 {
static final double score0(double[] data) {
  double pred =      (data[15 /* DE1004 */] <14035.0f ? 
       (data[1 /* DE3 */] <140000.5f ? 
           (data[7 /* DE19 */] <251.0f ? 
              0.10227273f : 
               (data[15 /* DE1004 */] <10327.5f ? 
                  -0.35795453f : 
                  -1.571281f)) : 
           (Double.isNaN(data[15]) || data[15 /* DE1004 */] <13658.5f ? 
              0.10227273f : 
              -0.35795453f)) : 
       (Double.isNaN(data[2]) || data[2 /* DE4 */] <92472.5f ? 
           (data[6 /* DE18 */] <3142.5f ? 
               (data[12 /* DE49 */] <253.0f ? 
                  -0.35795453f : 
                  0.10227273f) : 
              0.10227273f) : 
          -0.35795453f));
  return pred;
} // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class FortiateGBMPojo_Forest_1 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_1_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_1_class_0 {
static final double score0(double[] data) {
  double pred =      (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.14014472E8f ? 
       (data[6 /* DE18 */] <3177.5f ? 
           (Double.isNaN(data[6]) || data[6 /* DE18 */] <3133.5f ? 
               (data[12 /* DE49 */] <253.0f ? 
                  0.10317814f : 
                   (data[15 /* DE1004 */] <14053.5f ? 
                      0.102315135f : 
                      0.10205178f)) : 
               (data[0 /* DE2 */] <4.32417764E15f ? 
                  -0.9029911f : 
                  0.10217116f)) : 
           (Double.isNaN(data[2]) || data[2 /* DE4 */] <88979.5f ? 
               (data[15 /* DE1004 */] <14623.5f ? 
                   (data[1 /* DE3 */] <140000.5f ? 
                      0.10697067f : 
                      0.102207124f) : 
                  0.10205178f) : 
              -0.23679334f)) : 
       (data[5 /* DE7 */] <1.14119312E8f ? 
          -0.5523892f : 
           (data[6 /* DE18 */] <3231.5f ? 
              0.105050415f : 
              0.10216394f)));
  return pred;
} // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class FortiateGBMPojo_Forest_2 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_2_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_2_class_0 {
static final double score0(double[] data) {
  double pred =      (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.14014472E8f ? 
       (data[6 /* DE18 */] <3177.5f ? 
           (data[2 /* DE4 */] <12912.5f ? 
               (data[0 /* DE2 */] <4.32417764E15f ? 
                  -0.46295908f : 
                  0.10227668f) : 
               (data[0 /* DE2 */] <2.69563932E15f ? 
                  0.10398016f : 
                   (!Double.isNaN(data[15]) ? 
                      0.10192683f : 
                      0.102292955f))) : 
           (Double.isNaN(data[2]) || data[2 /* DE4 */] <88979.5f ? 
               (data[15 /* DE1004 */] <14623.5f ? 
                   (data[1 /* DE3 */] <140000.5f ? 
                      0.10629126f : 
                      0.10199296f) : 
                  0.10185272f) : 
              -0.16868903f)) : 
       (data[5 /* DE7 */] <1.14119312E8f ? 
          -0.30485502f : 
           (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.15072152E8f ? 
              0.10195246f : 
              0.10457109f)));
  return pred;
} // constant pool size = 44B, number of visited nodes = 11, static init size = 0B
}


class FortiateGBMPojo_Forest_3 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_3_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_3_class_0 {
static final double score0(double[] data) {
  double pred =      (data[1 /* DE3 */] <140000.5f ? 
       (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.13559464E8f ? 
           (data[6 /* DE18 */] <3177.5f ? 
               (!Double.isNaN(data[13 /* DE61 */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[13])) ? 
                  -0.33655047f : 
                  0.102216095f) : 
               (data[15 /* DE1004 */] <13825.5f ? 
                  0.10597268f : 
                   (Double.isNaN(data[2]) || data[2 /* DE4 */] <72827.5f ? 
                      0.10167248f : 
                      0.10405366f))) : 
          -0.253424f) : 
       (data[19 /* DE5004 */] <22537.5f ? 
          -0.30064192f : 
           (Double.isNaN(data[2]) || data[2 /* DE4 */] <83395.0f ? 
               (data[6 /* DE18 */] <3177.5f ? 
                   (data[0 /* DE2 */] <4.32417764E15f ? 
                      0.10528632f : 
                      0.1021376f) : 
                   (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.14017656E8f ? 
                      0.101721585f : 
                      0.10357865f)) : 
              -0.24927768f)));
  return pred;
} // constant pool size = 51B, number of visited nodes = 11, static init size = 30B
// {11000000 00000000 00000000 00000000}
public static final byte[] GRPSPLIT0 = new byte[] {3, 0, 0, 0};
}


class FortiateGBMPojo_Forest_4 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_4_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_4_class_0 {
static final double score0(double[] data) {
  double pred =      (data[12 /* DE49 */] <250.0f ? 
       (Double.isNaN(data[0]) || data[0 /* DE2 */] <5.5640872E15f ? 
           (data[2 /* DE4 */] <12334.5f ? 
              -0.31851116f : 
               (data[6 /* DE18 */] <3135.5f ? 
                  0.10304695f : 
                   (data[5 /* DE7 */] <1.07103752E8f ? 
                      0.1033924f : 
                      0.10166572f))) : 
          -0.4242057f) : 
       (data[1 /* DE3 */] <140000.5f ? 
           (data[15 /* DE1004 */] <14034.5f ? 
               (data[0 /* DE2 */] <4.7387147E15f ? 
                  -0.17921658f : 
                  -0.013324442f) : 
               (Double.isNaN(data[2]) || data[2 /* DE4 */] <59048.5f ? 
                   (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.11165936E8f ? 
                      0.10159815f : 
                      0.10203584f) : 
                  0.103655815f)) : 
           (data[0 /* DE2 */] <4.31677526E15f ? 
               (data[6 /* DE18 */] <3177.5f ? 
                  0.104301825f : 
                   (Double.isNaN(data[15]) || data[15 /* DE1004 */] <25011.5f ? 
                      0.10180496f : 
                      0.10357318f)) : 
               (data[11 /* DE48 */] <9.7815049E12f ? 
                  0.103283145f : 
                   (data[16 /* DE2004 */] <78681.5f ? 
                      0.10185429f : 
                      0.10151109f)))));
  return pred;
} // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class FortiateGBMPojo_Forest_5 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_5_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_5_class_0 {
static final double score0(double[] data) {
  double pred =      (data[12 /* DE49 */] <250.0f ? 
       (Double.isNaN(data[8]) || data[8 /* DE25 */] <55.5f ? 
           (data[11 /* DE48 */] <9.7874755E12f ? 
              -0.41560256f : 
               (data[5 /* DE7 */] <1.05118712E8f ? 
                  -0.1971049f : 
                   (data[5 /* DE7 */] <1.08607328E8f ? 
                      0.10563803f : 
                      0.10241195f))) : 
           (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.11548616E8f ? 
               (!Double.isNaN(data[16]) ? 
                  0.10155996f : 
                  0.1026549f) : 
              0.10352651f)) : 
       (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.13632856E8f ? 
           (data[6 /* DE18 */] <3177.5f ? 
               (data[1 /* DE3 */] <140000.5f ? 
                  -0.12642482f : 
                   (Double.isNaN(data[6]) || data[6 /* DE18 */] <3161.5f ? 
                      0.10166473f : 
                      0.104336716f)) : 
               (Double.isNaN(data[2]) || data[2 /* DE4 */] <83546.0f ? 
                   (data[15 /* DE1004 */] <15387.5f ? 
                      0.10350117f : 
                      0.10136501f) : 
                  0.10414173f)) : 
           (data[6 /* DE18 */] <3332.5f ? 
              0.11630265f : 
              -0.17926794f)));
  return pred;
} // constant pool size = 56B, number of visited nodes = 14, static init size = 0B
}


class FortiateGBMPojo_Forest_6 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_6_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_6_class_0 {
static final double score0(double[] data) {
  double pred =      (data[15 /* DE1004 */] <14035.0f ? 
       (data[1 /* DE3 */] <140000.5f ? 
           (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.11554592E8f ? 
               (data[6 /* DE18 */] <3266.5f ? 
                  -0.11251326f : 
                  0.105465725f) : 
              -0.17485933f) : 
           (data[5 /* DE7 */] <1.04196176E8f ? 
              -0.19938573f : 
               (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.12559728E8f ? 
                   (data[12 /* DE49 */] <250.5f ? 
                      0.10193591f : 
                      0.10143392f) : 
                   (data[8 /* DE25 */] <55.5f ? 
                      0.10284239f : 
                      0.10300142f)))) : 
       (Double.isNaN(data[6]) || data[6 /* DE18 */] <7511.5f ? 
           (data[6 /* DE18 */] <3141.0f ? 
               (!Double.isNaN(data[13 /* DE61 */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[13])) ? 
                  -0.1436268f : 
                   (data[2 /* DE4 */] <22118.5f ? 
                      0.10333044f : 
                      0.101726435f)) : 
               (Double.isNaN(data[2]) || data[2 /* DE4 */] <84376.5f ? 
                   (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.13666248E8f ? 
                      0.10193471f : 
                      0.103340544f) : 
                  0.10402312f)) : 
          -0.21499422f));
  return pred;
} // constant pool size = 63B, number of visited nodes = 14, static init size = 30B
// {11000000 00000000 00000000 00000000}
public static final byte[] GRPSPLIT0 = new byte[] {3, 0, 0, 0};
}


class FortiateGBMPojo_Forest_7 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_7_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_7_class_0 {
static final double score0(double[] data) {
  double pred =      (data[12 /* DE49 */] <250.0f ? 
       (Double.isNaN(data[0]) || data[0 /* DE2 */] <5.5640872E15f ? 
           (data[2 /* DE4 */] <12334.5f ? 
              -0.18443005f : 
               (data[6 /* DE18 */] <3135.5f ? 
                  0.10270543f : 
                   (data[5 /* DE7 */] <1.04056872E8f ? 
                      0.1026742f : 
                      0.10185522f))) : 
          -0.19984993f) : 
       (data[15 /* DE1004 */] <13261.5f ? 
           (data[1 /* DE3 */] <140000.5f ? 
              -0.113048986f : 
               (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.11575E8f ? 
                   (data[0 /* DE2 */] <4.50052712E15f ? 
                      0.101389766f : 
                      0.10117571f) : 
                  0.10279327f)) : 
           (data[11 /* DE48 */] <9.7841505E12f ? 
               (Double.isNaN(data[11]) || data[11 /* DE48 */] <9.7830872E12f ? 
                   (data[5 /* DE7 */] <1.06706016E8f ? 
                      0.101165555f : 
                      0.10270952f) : 
                  -0.12253905f) : 
               (data[15 /* DE1004 */] <13970.5f ? 
                  0.11495051f : 
                   (Double.isNaN(data[2]) || data[2 /* DE4 */] <82382.0f ? 
                      0.1015642f : 
                      0.10296386f)))));
  return pred;
} // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class FortiateGBMPojo_Forest_8 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_8_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_8_class_0 {
static final double score0(double[] data) {
  double pred =      (Double.isNaN(data[2]) || data[2 /* DE4 */] <93491.0f ? 
       (data[1 /* DE3 */] <140000.5f ? 
           (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.13544784E8f ? 
               (data[6 /* DE18 */] <3177.5f ? 
                  -0.1257954f : 
                   (data[15 /* DE1004 */] <15340.0f ? 
                      0.1049186f : 
                      0.10129689f)) : 
              -0.120775156f) : 
           (Double.isNaN(data[19]) || data[19 /* DE5004 */] <7852.0f ? 
               (data[12 /* DE49 */] <253.0f ? 
                   (Double.isNaN(data[11]) || data[11 /* DE48 */] <9.7948124E12f ? 
                      0.10210584f : 
                      0.10510637f) : 
                   (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.13686952E8f ? 
                      0.1014012f : 
                      0.102910176f)) : 
              -0.14322947f)) : 
      -0.13241468f);
  return pred;
} // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class FortiateGBMPojo_Forest_9 {
public static void score0(double[] fdata, double[] preds) {
  preds[1] += FortiateGBMPojo_Tree_9_class_0.score0(fdata);
}
}
class FortiateGBMPojo_Tree_9_class_0 {
static final double score0(double[] data) {
  double pred =      (data[12 /* DE49 */] <250.0f ? 
       (Double.isNaN(data[8]) || data[8 /* DE25 */] <55.5f ? 
           (data[11 /* DE48 */] <9.7874755E12f ? 
              -0.20887737f : 
               (data[5 /* DE7 */] <1.05118712E8f ? 
                  -0.1317328f : 
                   (data[5 /* DE7 */] <1.08607328E8f ? 
                      0.10477028f : 
                      0.10375762f))) : 
           (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.11548616E8f ? 
               (data[2 /* DE4 */] <18145.0f ? 
                  0.102117695f : 
                   (data[11 /* DE48 */] <9.7873381E12f ? 
                      0.102297075f : 
                      0.10098977f)) : 
              0.10334266f)) : 
       (data[15 /* DE1004 */] <13261.5f ? 
           (data[1 /* DE3 */] <140000.5f ? 
              -0.09382762f : 
               (Double.isNaN(data[5]) || data[5 /* DE7 */] <1.11575E8f ? 
                   (data[0 /* DE2 */] <4.50052712E15f ? 
                      0.10122564f : 
                      0.10098943f) : 
                  0.10234242f)) : 
           (data[6 /* DE18 */] <3243.5f ? 
               (data[15 /* DE1004 */] <13970.5f ? 
                  0.11866588f : 
                   (data[2 /* DE4 */] <13260.5f ? 
                      0.10233407f : 
                      0.10168815f)) : 
               (data[15 /* DE1004 */] <14977.0f ? 
                  -0.09377791f : 
                   (Double.isNaN(data[2]) || data[2 /* DE4 */] <77112.0f ? 
                      0.10132201f : 
                      0.10312995f)))));
  return pred;
} // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}



